# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    open_log_file_cache  max=1000 inactive=20s min_uses=1 valid=1m;
    access_log  /var/log/nginx/access.log  main;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    charset             utf-8;          ## 字符集

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

#    server {
#        listen 80 default;
#        server_name _;
#        return 403;
#        listen       80 default_server;
#        listen       [::]:80 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#        location / {
#        }
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

      server_tokens                 off;                                ## 隐藏nginx版本
      proxy_redirect                off;                                ## 关闭代理重定向
      proxy_set_header              Host $host;
      proxy_set_header              X-Real-IP $remote_addr;
      proxy_set_header              X-Forwarded-For $proxy_add_x_forwarded_for;
      client_max_body_size          20m;                        ## 设置客户端请求body的最大允许大小
      client_body_buffer_size       256k;                       ## 设置客户端请求body的缓冲区大小
      proxy_connect_timeout         90;                         ## 与后端服务器连接的超时时长
      proxy_send_timeout            90;                         ## 把请求发送给后端服务器的超时时长
      proxy_read_timeout            90;                         ## 等待后端服务器发送响应报文的超时时长
      proxy_buffer_size             128k;                       ## 从代理服务器接收的响应的第一部分缓冲区
      proxy_buffers                 4 64k;                      ## 从代理服务器读取响应的缓冲区number和size
      proxy_busy_buffers_size       128k;                       ## 限制size在响应尚未完全读取时可能忙于向客���端发送响应的缓冲区总数
      proxy_temp_file_write_size    128k;                       ## 该指令设置缓冲临时文件的最大值

      client_body_temp_path           /var/tmp/client_body_temp 1 2;  ## 请求body临时目录
      proxy_temp_path                 /var/tmp/proxy_temp 1 2;  ## 代理服务器接受数据临时目录
      fastcgi_temp_path               /var/tmp/fastcgi_temp 1 2; ## FastCGI服务器接收临时目录
      uwsgi_temp_path                 /var/tmp/uwsgi_temp 1 2; ## uwsgi 服务器接收临时目录
      scgi_temp_path                  /var/tmp/scgi_temp 1 2; ##scgi服务器接收临时目录

      ignore_invalid_headers          on;               ## 开启控制忽略具有无效名称的标头字段
      server_names_hash_max_size      256;              ## 服务器名称哈希表的最大值
      server_names_hash_bucket_size   64;               ## 服务器名称哈希表存储bucket大小
      client_header_buffer_size       8k;               ## 设置缓冲区以读取客户端请求标头
      large_client_header_buffers     4 32k;    ## 设置缓冲区以读取客户端请求标头最大值number和size
      connection_pool_size            256;              ## 允许精确调整每个连接的内存分配
      request_pool_size               64k;              ## 允许精���调整每个请求的内存分配

      output_buffers                  2 128k;   ## 设置用于从磁盘读取响应的缓冲区number和size
      postpone_output                 1460;             ## 客户端数据的传输最小值，单位字节

      client_header_timeout           1m;               ## 定义读取客户端请求标头的超时时长
      client_body_timeout             3m;               ## 定义读取客户端请求主体的超时时长
      send_timeout                    3m;               ## 设置将响应传输到客户端的超时时长

      sendfile                        off;
      tcp_nopush                      on;
      tcp_nodelay                     on;
      keepalive_timeout               65;
      types_hash_max_size             2048;
      reset_timedout_connection       on;               ## 启用重置超时连接
      keepalive_requests              100;              ## 设置可通过一个保持活动连接提供的最大请求数

      gzip                            on;               ## 开启压缩
      gzip_http_version               1.1;              ## ���用压缩时协议最小版本
      gzip_vary                       on;
      gzip_proxied                    any;              ## 为所有代理请求启用压缩
      gzip_min_length                 1024;             ## 设置将被gzip压缩的响应的最小长度
      gzip_comp_level                 6;                ## 设置压缩等级
      gzip_buffers                    16 8k;            ## 设置用于压缩响应的缓冲区number和size
      gzip_proxied                    expired no-cache no-store private auth no_last_modified no_etag;
      gzip_types                      text/plain application/x-javascript text/css application/xml application/json;
      gzip_disable                    "MSIE [1-6]\.(?!.*SV1)";

}
